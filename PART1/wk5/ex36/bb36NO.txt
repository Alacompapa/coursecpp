----------------------------------------------------------------------------
  definition:         rewrite: 
----------------------------------------------------------------------------
  int x[8];           x[3] = x[2];

pointer notation:   *(x + 3) = *(x + 2);
       semantics:
----------------------------------------------------------------------------
  char *argv[8];      cout << argv[2];

pointer notation:   cout << *(argv + 2);   
       semantics:
----------------------------------------------------------------------------
  int x[8];           &x[10] - &x[3];
 
pointer notation:   7;
       semantics:	
EXPLANATION(bb):
&x[10] - &x[3] 
  address of the value at the location pointed to by (x+10) minus the address of
  the value at the location pointed to by (x+3)
<-> &(*(x + 10)) - &(*(x + 3)) 
  & and * cancel eachother out. Also note x is a pointer.
<-> (x + 10) - (x + 3) = 7
  7 means that the 'distance' between memory location x+10 and memloc x+3
  is 7*size, since x points to an int, size=sizeof(int)
----------------------------------------------------------------------------
  main's argv;        argv[0]++;

pointer notation:   (*argv)++;
       semantics:
EXPLANATION(bb): 
argv[0]++
<-> (by associativity left to right of [] and (post)++ operators)
(*(argv + 0))++
<->
(*argv)++
----------------------------------------------------------------------------
  main's argv;        argv++[0];

pointer notation:   *(argv++);  // same result as *argv
       semantics:
EXPLANATION(bb):
argv++[0]
<-> (by associativity LTR of [] and (post)++ operators)
*(argv++)
<->
*argv
  since (post)++ returns the object before incrementation and then increments
----------------------------------------------------------------------------
  main's argv;        ++argv[0];

pointer notation:   ++*argv;
       semantics:
EXPLANATION(bb):
++argv[0]
<-> (by precendence of [] over ++(pre) operator)
++(argv[0])
<->
++(*(argv + 0))
<->
++(*argv)
<-> (by associativity RTL of ++(pre) and * operators)
++*argv
  that which *argv points to gets incremented by 1
----------------------------------------------------------------------------
  main's argv;        ++argv[0][2];

pointer notation:   ++*((*argv) + 2)
       semantics:
EXPLANATION(bb):
++argv[0][2]
<-> (by precedence)
++(argv[0][2])
<-> (by associativity)
++((*(argv + 0))[2])
<->
++((*argv)[2])
<->
++(*(*argv) + 2)
  that which is located on the (0,2)th element of argv is incremented
----------------------------------------------------------------------------
