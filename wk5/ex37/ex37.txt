// 1. Declare a variable ptr pointing to rows of 8 doubles
double (*ptr)[][8];

// 2. Declare a variable ptr pointing to an array holding the addresses of series of doubles. The series of doubles may consist of different numbers of doubles
double (*(*ptr)[])[];

// 3. Declare a pointer ptr that may point to arrays of immutable pointers to arrays of mutable pointers to immutable std::string objects.
std::string const *(*const (*ptr)[])[];

// 4. Declare a function fun expecting no parameters, returning matrices of 8 x 8 std::string objects
std::string (*fun())[8][8]; // doubting this one in light of (5)

// 5. Assume that the following typedef has been defined:
// 
//         typedef std::string (*StringMat)[8];
//         
//    Declare a function fun as in the previous item, now using StringMat
StringMat (*fun())[8];

// 6. Assume that main's argv parameter is defined as a pointer pointing to an array of immutable raw string literals. What would main's function head then be?
int main(int argc, char const (*argv)[]);

// 7. Declare a function fun defining a parameter ptr which is an immutable pointer to NTBSs, returning one of these pointers as an immutable NTBS
char const (*fun(char (*const ptr)[][]))[];
